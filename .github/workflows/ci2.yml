name: Xray Integration

on:
  workflow_dispatch:
    inputs:
      project-key:
        description: 'Xray project key'
        required: true
        default: 'YAK'
      test-plan-key:
        description: 'Xray test plan key'
        required: true       

jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cypress run
        uses: cypress-io/github-action@v6
      - name: Set1
        id: set1
        env:
         CLIENT_ID1: "test"        
        run: |
          echo "set1 output: $CLIENT_ID1"
         
      - name: Set2
        run: |
         echo "set2 output: ${{ steps.set1.outputs.CLIENT_ID1 }}"

      - name: Set environment variables
        env:
          CLIENT_ID: ${{ secrets.XRAY_CLIENT_ID }}  # Replace with your client ID secret
          CLIENT_SECRET: ${{ secrets.XRAY_CLIENT_SECRET }}  # Replace with your client secret secret
        run: |
          echo "CLIENT_ID: $CLIENT_ID"
          echo "CLIENT_SECRET: $CLIENT_SECRET"

      - name: Authenticate with Xray and Submit results
        id: authenticate_and_submit
        run: |
          # Authenticate with Xray
          RESPONSE=$(curl --location --request POST 'https://xray.cloud.getxray.app/api/v1/authenticate' \
          --header 'Content-Type: application/json' \
          --data-raw '{ "client_id": "C2DDC03EB801485E93A8A1BBF29A60F8","client_secret": "f25bc582a1c9a41875413da9a083f5ff082bb241f446780cc705636dbb5feb8c" }')
          echo "Response from Xray: $RESPONSE"

          # Submit results to Xray
          echo "Submitting results to Xray..."
          echo "Using Xray authentication response: $RESPONSE"
          
          PROJECT_PATH="${{ github.workspace }}"
          FILE_PATH="$PROJECT_PATH/cypress/results/junit/results.xml"
          echo "Project path: $PROJECT_PATH"
          echo "File Path: $FILE_PATH"
          
          echo "JWT Token in Authorization Header: $RESPONSE"  # Debugging output for Authorization header

      - name: result upload
        run: |        
           OUTPUT=$(curl --location --request POST 'https://xray.cloud.getxray.app/api/v1/import/execution/junit?projectKey=${{ github.event.inputs.project-key }}&testPlanKey=${{ github.event.inputs.test-plan-key }}' \
             --header "Authorization: Bearer $RESPONSE" \
             --header 'Content-Type: application/xml' \
             --data-binary @"$FILE_PATH")
           echo "OUTPUT from Xray: $OUTPUT"
